<!DOCTYPE html>
@{
    var list = Model as IEnumerable<ActionItem>;
    bool edit = list?.Any(x => x.Action.ToUpper() == "EDIT" && x.IsEnabled) ?? false;
    bool add = list?.Any(x => x.Action.ToUpper() == "ADD" && x.IsEnabled) ?? false;
}
<html lang="en" ng-app="Stock-CMS">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document Management</title>

</head>
<style>
    .cell {
    position: relative; /* Ensures the hover effect is managed correctly */
}

.img-container {
    position: relative;
    display: inline-block;
}

img {
    width: 35px;
    height: 35px;
    /* transition: all 0.3s ease; /* Smooth transition */ */
}

    .iframe-container {
        position: relative;
        width: 100%; /* Make the container take up 100% of the available width */
        height: 0;
        padding-bottom: 56.25%; /* Aspect ratio of 16:9 (for example) */
        overflow: hidden;
    }

        .iframe-container iframe {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;

        }

    .sticky-action {
        position: sticky;
        right: 0;
        z-index: 2;
    }

/* .cell:hover img { */
/*     width: 100px; */
/*     height: 100px; */
/*     position: absolute; /* To take the image outside of the table cell */ */
/*     z-index: 10; /* Ensure it appears above other elements */ */
/*     top: -50px; /* Adjusts the image's position outside of the table row */ */
/*     left: -50px; /* Adjusts the image's position outside of the table column */ */
/* } */

    

</style>
<body ng-controller="DocController">

        <div class="app-content pt-3 p-md-3 p-lg-4">
            <div class="container-xl">
                <div class="row g-3 mb-4 align-items-center justify-content-between">
                    <!-- Left Side: Back Button and Title -->
                    <div class="d-flex align-items-center col-md-6">
                    <a ng-click="navtoStock()" class="btn btn-custom me-3">
                            <i class="bi bi-arrow-left text-left" style="color:#51b37f;font-size:xx-large;"></i>
                        </a>
                        <h1 class="app-page-title mb-0">Document Management</h1>
                    </div>

                    <div class="col-md-6 d-flex justify-content-end align-items-center">
                        <div class="d-flex gap-2">
                            <form class="table-search-form row gx-1 align-items-center mb-0">
                                <input type="text" ng-model="searchQuery" class="form-control search-orders" placeholder="Search">
                            </form>
                        @if (add) { 
                            <button class="btn btn-custom " style="background-color:#51b37f;color:white" ng-click="openDocModal()">Add Document</button>
                        }
                            <button class="btn btn-custom"
                                    style="background-color:#51b37f;color:white"
                                    excel-export
                                    table-id="tblholderDoc"
                                    file-name="Doc"
                                    sheet-name="Sheet1"
                                    file-type="xlsx">
                                Export
                            </button>
                        </div>
                    </div>
                </div>

                <div class="app-card app-card-orders-table shadow-sm mb-5">
                    <div class="app-card-body">
                        <div class="table-responsive">
                        <table id="tblholderDoc" class="table app-table-hover mb-0 text-left text-nowrap">
                            <thead>
                                <tr>
                                    <th class="cell">Document Name</th>
                                    <th class="cell">Document</th>
                                    <th class="cell">Created At</th>
                                    <th class="cell">Created By</th>
                                    <th class="cell">Updated At</th>
                                    <th class="cell">Updated By</th>
                                    <th class="cell sticky-action text-center">Action</th>
                                    @* <th class="cell">Delete</th> *@
                                </tr>
                            </thead>
                            <tbody>
                                <tr ng-repeat="doc in docs | filter: searchQuery" ">
                                    <td class="cell">{{ doc.documentName }}</td>
                                    <td class="cell" ng-click="openimageModal(doc.docUrl)">
                                        <div class="">

                                            <img ng-if="isImage(doc.docUrl)" ng-src="{{doc.docUrl}}" width="35" height="35" />

                                            <i ng-if="!isImage(doc.docUrl)" class="fas fa-file-pdf pdf-file" style="font-size:xx-large;color: #da2d27"></i>
                                        </div>
                                    </td>

                                    <td class="cell">{{ doc.createdAt | date:'dd-MM-yyyy' }}</td>
                                    <td class="cell">{{ doc.createdByName }}</td>
                                    <td class="cell">{{ doc.updatedAt | date:'dd-MM-yyyy' }}</td>
                                    <td class="cell">{{ doc.updatedByName }}</td>
                                    <td class="cell sticky-action">
                                @if (edit) { 
                                        <span class="btn-sm app-btn" style="color:green;font-size:large" ng-click="openDocModal(doc)" title="Edit Documents">
                                            <i class="bi bi-pencil"></i>
                                        </span>
                                }
                                    </td>
                                </tr>
                            </tbody>
                        </table>

                        </div>
                    </div>
                </div>

            </div>
        </div>

    <!-- Preview Model-->
    <div class="modal fade" id="imageModal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-xl" role="document">
            <div class="modal-content">
                <div class="iframe-container">
                    <iframe src="{{imgUrl}}" frameborder="0"></iframe>
                </div>
            </div>
        </div>
    </div>

        <!-- Add/Edit Stock Modal -->
        <div class="modal fade" id="docModal" tabindex="-1" role="dialog" aria-hidden="true">
            <div class="modal-dialog modal-xl"  role="document">
                <div class="modal-content">
                    <form ng-submit="saveDoc()">
                        <div class="modal-header">
                            <h5 class="modal-title">{{ isEditing ? 'Edit Doc' : 'Add Doc' }}</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                          
                            <div class="row">
                               
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="documentName">Document Name</label>
                                    <input type="text" id="documentName" ng-model="currentHolderDoc.documentName" class="form-control" placeholder="Enter Name As Per Aadhar" required />
                                </div>
                            </div>
                           
                                <div class="col-md-6">
                                    <div class="form-group">
                                    <label for="docFile">Doc File</label>
                                    <input type="file" id="docFile" class="form-control" file-model="currentHolderDoc.docFile" ng-model="currentHolderDoc.docFile" />
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="text-center m-2">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" ng-disabled="processdone" class="btn" style="background-color:#51b37f;color:white">{{ isEditing ? 'Update' : 'Save' }}</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>


<script>
    angular.module('Stock-CMS', [])
    .directive('fileModel', ['$parse', function ($parse) {
        return {
            restrict: 'A',
            require: 'ngModel',
            link: function (scope, element, attrs, ngModel) {
                element.bind('change', function () {
                    var file = element[0].files[0];
                    scope.$apply(function () {
                        ngModel.$setViewValue(file);
                    });
                });
            }
        };
    }])
    .controller('DocController', function ($scope, $http) {
        $scope.currentHolderDoc = {};
        $scope.docs = [];
        $scope.isEditing = false;
        var isProcessing = false;
            $scope.processdone = false;

         showLoader();

             var path = window.location.pathname;
            var segments = path.split('/');
            var id = segments[segments.length - 1];

         $scope.loadDocs = function () {
                 if (id)
                 {
                    $http.get('/doc/GetHolderDoc/'+ id).then(function (response) {
                    $scope.docs = response.data;
                    hideLoader();
                }, function (error) {
                    console.error('Error loading Docs:', error);
                    hideLoader();
                });
                }
            };

        $scope.openDocModal = function (doc = null) {
            $scope.isEditing = !!doc;
            $scope.currentHolderDoc = doc ? angular.copy(doc) : {};
                    $scope.currentHolderDoc.docFile= undefined;
                document.getElementById('docFile').value = '';
            $('#docModal').modal('show');
        };

        $scope.saveDoc = function () {
                      
           if (id) 
                {
                        $scope.processdone = true;
                    if (isProcessing) return;
                    isProcessing = true;
            var formData = new FormData();
                formData.append('id', $scope.isEditing ? $scope.currentHolderDoc.id : 0);
                formData.append('holderId', $scope.isEditing ? $scope.currentHolderDoc.holderId : id);
                formData.append('legalHeirId', 0);
                formData.append('documentName', $scope.currentHolderDoc.documentName);
                if ($scope.currentHolderDoc.docFile) formData.append('docFile', $scope.currentHolderDoc.docFile);

            var url = $scope.isEditing
                    ? '/doc/updateHolderDoc/' + $scope.currentHolderDoc.id
                    : '/doc/createHolderDoc';

            $http.post(url, formData, {
                headers: { 'Content-Type': undefined }
            }).then(function (response) {
                Swal.fire({
                    title: response.data.success ? 'Success' : 'Error',
                    text: response.data.success ? 'Operation successful!' : (response.data.message || 'An error occurred'),
                    icon: response.data.success ? 'success' : 'error',
                    confirmButtonText: 'OK'
                });
                    $scope.processdone = false;
                      isProcessing = false;
                    if(response.data.success)
                              {
                                      $scope.processdone = false;
                    $scope.loadDocs();
                        $scope.currentHolderDoc.docFile = '';
                    $('#docModal').modal('hide');
                              }
            });
                }
        };


        $scope.deleteDoc = function (docId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, delete it!',
                cancelButtonText: 'No, keep it'
            }).then((result) => {
                if (result.isConfirmed) {
                    $http.delete('/doc/delete/' + docId).then(function (response) {
                        Swal.fire({
                            title: response.data.success ? 'Deleted!' : 'Error',
                            text: response.data.success ? 'The document has been deleted.' : 'An error occurred.',
                            icon: response.data.success ? 'success' : 'error',
                            confirmButtonText: 'OK'
                        });
                        $scope.loadData();
                    });
                }
            });
        };

        $scope.navtoStock = function () {
        $http.get('/doc/GetDocById/'+ id).then(function (response) {
        var doc = response.data;
                    window.open('/Doc/Doc/'+doc.customerId, '_self');
    }, function (error) {
        console.error('Error loading Docs:', error);
        hideLoader();
    });
        };

        $scope.openimageModal = function (url) {
            $scope.imgUrl = url;
            $('#imageModal').modal('show');
        };

            $scope.isImage = function(url) {
              const imageExtensions = ['.jpg', '.jpeg', '.png', '.gif', '.bmp', '.webp'];
              return imageExtensions.some(extension => url.toLowerCase().endsWith(extension));
            };


        $scope.loadDocs();
    });
</script>

</body>
</html>
