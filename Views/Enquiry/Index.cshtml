<!DOCTYPE html>
@{
    var list = Model as IEnumerable<ActionItem>;
    bool edit = list?.Any(x => x.Action.ToUpper() == "EDIT" && x.IsEnabled) ?? false;
    bool add = list?.Any(x => x.Action.ToUpper() == "ADD" && x.IsEnabled) ?? false;
    bool delete = list?.Any(x => x.Action.ToUpper() == "DELETE" && x.IsEnabled) ?? false;
    bool cell = list?.Any(x => x.Action.ToUpper() == "CELL" && x.IsEnabled) ?? false;
}
<html lang="en" ng-app="Stock-CMS">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Stock Management</title>
</head>
<style>
    .sticky-header {
        position: sticky;
        top: 0;
        background-color: #fff; /* Ensures that the header has a solid background */
        z-index: 1; /* Makes sure the header stays on top of the content */
    }

    .table-responsive {
        max-height: 500px; /* Set a fixed height to make the table scrollable */
        overflow-y: auto;
    }

    .sticky-action {
        position: sticky;
        right: 0;
        z-index: 2;
    }

    .nav-style {
        color: blue !important;
    }

        .nav-style:hover {
            cursor: pointer;
            text-decoration: underline;
        }

        .app-nav-tabs .nav-link {
            padding: 8px;
        }
</style>
<body ng-controller="StockController">
    
        <div class="app-content pt-3 p-md-3 p-lg-4">
            <div class="container-xl">
                <div class="row g-3 mb-4 align-items-center justify-content-between">
                    <!-- Left Side: Back Button and Title -->
                    <div class="d-flex align-items-center col-md-4">
                        <a asp-controller="Master" asp-action="Client" class="btn btn-custom me-3">
                            <i class="bi bi-arrow-left text-left" style="color:#51b37f;font-size:xx-large;"></i>
                        </a>
                        <h1 class="app-page-title mb-0">Stock Management</h1>
                    </div>

                    <div class="col-md-8 d-flex justify-content-end align-items-center">
                        <div class="d-flex gap-2">
                            <form class="table-search-form row gx-1 align-items-center mb-0">
                                <input type="text" ng-model="searchQuery" class="form-control search-orders" placeholder="Search">
                            </form>
                            @if(add){
                            <button class="btn btn-custom " style="background-color:#51b37f;color:white" ng-click="openStockModal()">Add Stock</button>
                        <button class="btn btn-custom " style="background-color:#51b37f;color:white" ng-click="openimportModal()">Import</button>
                            @* <button class="btn app-btn-primary" style="background-color:#51b37f;color:white" ng-click="openRtaModal()">Add RTA</button> *@
                        <button class="btn app-btn-primary" style="background-color:#51b37f;color:white" ng-click="openCompanyModal()">Add Company</button>
                        <button class="btn app-btn-primary" style="background-color:#51b37f;color:white" ng-click="manageDocs()">Go To Holder</button>
                        }
                            <button class="btn btn-custom"
                                    style="background-color:#51b37f;color:white"
                                    excel-export
                                    table-id="tblstock"
                                    file-name="Stock"
                                    sheet-name="{{ search === '' ? 'All' : search }}"
                                    file-type="xlsx">
                                Export
                            </button>
                        </div>
                    </div>
        <nav id="orders-table-tab" class="orders-table-tab app-nav-tabs nav shadow-sm flex-column flex-sm-row mb-1">
            <!-- All Tab -->
            <a class="flex-sm-fill text-sm-center nav-link" data-bs-toggle="tab"
               ng-class="{'active': search === ''}" ng-click="filter('')"
               role="tab" aria-selected="{{search === '' ? 'true' : 'false'}}">All</a>

            <!-- Pending Tab -->
            <a class="flex-sm-fill text-sm-center nav-link" data-bs-toggle="tab"
               ng-class="{'active': search === 'Pending'}" ng-click="filter('Pending')"
               role="tab" aria-selected="{{search === 'Pending' ? 'true' : 'false'}}">Pending</a>

            <!-- Follow Up Tab -->
            <a class="flex-sm-fill text-sm-center nav-link" data-bs-toggle="tab"
               ng-class="{'active': search === 'Follow Up'}" ng-click="filter('Follow Up')"
               role="tab" aria-selected="{{search === 'Follow Up' ? 'true' : 'false'}}">Follow Up</a>

            <!-- IEPF Post Receipt Pending Tab -->
            <a class="flex-sm-fill text-sm-center nav-link" data-bs-toggle="tab"
               ng-class="{'active': search === 'IEPF Post Receipt Pending'}" ng-click="filter('IEPF Post Receipt Pending')"
               role="tab" aria-selected="{{search === 'IEPF Post Receipt Pending' ? 'true' : 'false'}}">IEPF Post Receipt Pending</a>

			<!-- IEPF Tab -->
            <a class="flex-sm-fill text-sm-center nav-link" data-bs-toggle="tab"
               ng-class="{'active': search === 'IEPF'}" ng-click="filter('IEPF')"
               role="tab" aria-selected="{{search === 'IEPF' ? 'true' : 'false'}}">IEPF</a>

			<!-- IEPF Rejected Tab -->
            <a class="flex-sm-fill text-sm-center nav-link" data-bs-toggle="tab"
               ng-class="{'active': search === 'IEPF Rejected'}" ng-click="filter('IEPF Rejected')"
               role="tab" aria-selected="{{search === 'IEPF Rejected' ? 'true' : 'false'}}">IEPF Rejected</a>

			<!-- DRF Form Submitted Tab -->
            <a class="flex-sm-fill text-sm-center nav-link" data-bs-toggle="tab"
               ng-class="{'active': search === 'DRF Form Submitted'}" ng-click="filter('DRF Form Submitted')"
               role="tab" aria-selected="{{search === 'DRF Form Submitted' ? 'true' : 'false'}}">DRF Form Submitted</a>

               <!-- DRF Rejected Tab -->
            <a class="flex-sm-fill text-sm-center nav-link" data-bs-toggle="tab"
               ng-class="{'active': search === 'DRF Rejected'}" ng-click="filter('DRF Rejected')"
               role="tab" aria-selected="{{search === 'DRF Rejected' ? 'true' : 'false'}}">DRF Rejected</a>

               <!-- Demated Tab -->
            <a class="flex-sm-fill text-sm-center nav-link" data-bs-toggle="tab"
               ng-class="{'active': search === 'Demated'}" ng-click="filter('Demated')"
               role="tab" aria-selected="{{search === 'Demated' ? 'true' : 'false'}}">Demated</a>
        </nav>
                </div>

                <div class="app-card app-card-orders-table shadow-sm mb-5">
                    <div class="app-card-body">
                        <div class="table-responsive">
                            <table id="tblstock" class="table app-table-hover mb-0 text-left text-nowrap">
                                <thead class="sticky-header">
                                    <tr>
                                        <th class="cell">#</th>
                                        <th class="cell">Company Name</th>
                                        <th class="cell">Customer</th>
                                        <th class="cell">First Holder</th>
                                        <th class="cell">Second Holder</th>
                                        <th class="cell">Third Holder</th>
                                        <th class="cell">Folio No</th>
                                        <th class="cell">Claim Status</th>
                                        <th class="cell">Actual Quantity</th>
                                        <th class="cell">Current Quantity</th>
                                    <th class="cell">Current Rate</th>
                                    <th class="cell">Face Value</th>
                                        <th class="cell">Value</th>
                                    @if (cell){
                                        <th class="cell">Brokerage</th>
                                        <th class="cell">Brokerage Amount</th>
                                        <th class="cell">Paid</th>
                                    }
                                        <th class="cell">Process to be Followed</th>
                                        <th class="cell">Remarks</th>
                                        <th class="cell">Processed</th>
                                        <th class="cell">Active</th>
                                        <th class="cell">Created At</th>
                                        <th class="cell">Created By</th>
                                        <th class="cell">Updated At</th>
                                        <th class="cell">Updated By</th>
                                    <th class="cell sticky-action text-center">Action</th>
                                        @* <th class="cell">Stock Form</th> *@
                                        @* <th class="cell">Genarate Form</th> *@
                                        @* <th class="cell">Doc Upload</th> *@
                                    </tr>
                                </thead>
                                <tbody>
                                <tr ng-repeat="stock in stocks.stocks | filter: searchQuery">
                                        <td class="cell">{{ $index + 1 }}</td>
                                    <td ng-click="manageTrackingDoc(stock.id)" class="cell nav-style">{{ stock.companyName }}</td>
                                    <td class="cell">{{ stock.customerName }}</td>
                                        <td class="cell">{{ stock.firstHolderName }}</td>
                                        <td class="cell">{{ stock.secondHolderName }}</td>
                                        <td class="cell">{{ stock.thirdHolderName }}</td>
                                        <td class="cell">{{ stock.folioNo }}</td>
                                        <td class="cell">{{ stock.claimStatus  }}</td>
                                    <td class="cell">{{ stock.actualQty }}</td>
                                    <td class="cell">{{ stock.qty }}</td>
                                    <td class="cell">{{ stock.rate }}</td>
                                    <td class="cell">{{ stock.faceValue }}</td>
                                    <td class="cell">{{ stock.qty * stock.rate }}</td>
                                    @if (cell){
                                    <td class="cell" >{{ stock.brokerage }}</td>
                                    <td class="cell" >{{ stock.brokerage * (stock.qty * stock.rate) / 100 }}</td>
                                    <td class="cell" >{{ stock.isPaid ? 'Paid' : 'UnPaid' }}</td>
                                    }
                                        <td class="cell">{{ stock.ptbf }}</td>
                                        <td class="cell">{{ stock.remarks }}</td>
                                        <td class="cell">{{ stock.isProcessed ? 'Yes' : 'No' }}</td>
                                        <td class="cell">{{ stock.isActive ? 'Yes' : 'No' }}</td>
                                        <td class="cell">{{ stock.createdAt | date:'dd-MM-yy' }}</td>
                                        <td class="cell">{{ stock.createdByName }}</td>
                                        <td class="cell">{{ stock.updatedAt | date:'dd-MM-yy' }}</td>
                                        <td class="cell">{{ stock.updatedByName }}</td>
                                    <td class="cell sticky-action">
                                        @if(edit){
                                            <span class="btn-sm app-btn" style="color:green;font-size:large" ng-click="openStockModal(stock)" title="Edit stock">
                                                <i class="bi bi-pencil"></i>
                                            </span>

                                            <span class="btn-sm app-btn" style="color:green;font-size:large;" ng-style="{opacity: stock.isPaid ? '1' : '0.2'}" ng-click="paymentdone(stock)" title="Payment Status">
                                                <i class="bi bi-patch-check"></i>
                                            </span>
                                        
                                            <span class="btn-sm app-btn" style="color:green;font-size:large" ng-click="openFormModal(stock.id,stock.folioNo,stock.qty)" title="Add stock aquisition data">
                                            <i class="bi bi-file-earmark-bar-graph"></i>
                                        </span>
                                        }
                                        <span class="btn-sm app-btn" style="color:green;font-size:large" ng-click="navtogenerateform(stock.id)" title="Generate form">
                                            <i class="bi bi-file-earmark-plus"></i>
                                        </span>
                                        @if (delete)
                                        {
                                            <span class="btn-sm app-btn" style="color:red;font-size:large" ng-click="deleteStock(stock)" title="Delete Tracking">
                                                <i class="bi bi-trash"></i>
                                            </span>
                                        }
                                        </td> 
                                        @* <td class="cell">
                                            <span ng-hide="!stock.isClient" class="btn-sm app-btn" style="color:green;font-size:large">
                                                <i class="bi bi-upload"></i>
                                            </span>
                                        </td> *@
                                    </tr>
                                <tr>
                                    <td class="cell"></td>
                                    <td class="cell">Total</td>
                                    <td class="cell"></td>
                                    <td class="cell"></td>
                                    <td class="cell"></td>
                                    <td class="cell"></td>
                                    <td class="cell"></td>
                                    <td class="cell"></td>
                                    <td class="cell"></td>
                                    <td class="cell"></td>
                                    <td class="cell"></td>
                                    <td class="cell"></td>
                                    <td class="cell">{{ stocks.totalAmount }}</td>
                                    @if (cell){
                                    <td class="cell" ></td>
                                    <td class="cell" ></td>
                                    <td class="cell"></td>
                                    }
                                    <td class="cell"></td>
                                    <td class="cell"></td>
                                    <td class="cell"></td>
                                    <td class="cell"></td>
                                    <td class="cell"></td>
                                    <td class="cell"></td>
                                    <td class="cell"></td>
                                    <td class="cell"></td>
                                    <td class="cell"></td>
                                    @* <td class="cell">
                                            <span ng-hide="!stock.isClient" class="btn-sm app-btn" style="color:green;font-size:large">
                                                <i class="bi bi-upload"></i>
                                            </span>
                                        </td> *@
                                </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
               
            </div>
        </div>

    <!-- upload Modal -->
    <div class="modal fade" id="uploadModal" tabindex="-1" role="dialog" aria-hidden="true">

        <div class="modal-dialog modal-sm" role="document">

            <div class="modal-content">

                <form ng-submit="uploadDoc()">

                    <div class="modal-header">

                        <h5 class="modal-title">Upload Stocks</h5>

                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>

                    </div>

                    <div class="modal-body">



                        <div class="row">

                            <div class="col-md-12">

                                <div class="form-group">

                                    <label for="docFile">Doc File</label>

                                    <input type="file" id="docFile" class="form-control" file-model="docFile" ng-model="docFile" />

                                </div>

                            </div>

                        </div>

                    </div>

                    <div class="text-center m-2">

                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>

                        <button type="submit" ng-disabled="processdone" class="btn" style="background-color:#51b37f;color:white">Upload</button>

                    </div>

                </form>

            </div>

        </div>

    </div>

    <!-- Form Modal -->
    <div class="modal fade" id="formModal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog" style="max-width:75%" role="document">
            <div class="modal-content">
                <form name="gForm">
                    <!-- Modal Header -->
                    <div class="modal-header">
                        <h5 class="modal-title">Add Stock</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>

                    <!-- Modal Body -->
                    <div class="modal-body">
                        <div class="row">
                            <!-- Folio No -->
                            <div class="col-md-4 mb-3">
                                <div class="form-group">
                                    <label for="folioNo">Folio No</label>
                                    <div class="form-control-plaintext">{{ currentStockfolioNo }}</div>
                                </div>
                            </div>

                            <!-- Actual Quantity -->
                            <div class="col-md-4 mb-3">
                                <div class="form-group">
                                    <label for="qty">Actual Quantity</label>
                                    <input type="number" id="qty" disabled ng-model="jsonData.actualQty" class="form-control" placeholder="Quantity"  />
                                </div>
                            </div>
                            <!-- Certificate No -->
                            <div class="col-md-4 mb-3">
                                <div class="form-group">
                                    <label for="actualQty">Certificate No</label>
                                    <input type="text" id="actualQty" ng-model="jsonData.certificateNo" class="form-control" placeholder="Certificate No" required />
                                </div>
                            </div>
                        </div>

                        <div class="row">

                            <!-- Distinctive No From -->
                            <div class="col-md-4 mb-3">
                                <div class="form-group">
                                    <label for="rate">Distinctive No From</label>
                                    <input type="text" ng-model="jsonData.distinctiveNosFrom" class="form-control" ng-change="calculateqty()" placeholder="Distinctive No From" required />
                                </div>
                            </div>

                            <!-- Distinctive No To -->
                            <div class="col-md-4 mb-3">
                                <div class="form-group">
                                    <label for="rate">Distinctive No To</label>
                                    <input type="text" ng-model="jsonData.distinctiveNosTo" class="form-control" ng-change="calculateqty()"  placeholder="Distinctive No To" required />
                                </div>
                            </div>

                        </div>

                        <!-- Add Button -->
                        <div class="text-center mb-3">
                            <button ng-click="addStockData(gForm.$valid)" class="btn" style="background-color:#51b37f; color:white;">
                                ADD
                            </button>
                        </div>
                    </div>

                    <!-- Modal Footer -->
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button ng-click="SaveStockJson()" ng-disabled="processdone" class="btn" style="background-color:#51b37f; color:white">
                            Add Stock
                        </button>
                    </div>
                </form>
                <div class="m-2">
                    <!-- Stock List Table -->
                    <div class="app-card app-card-orders-table shadow-sm mb-5">
                        <div class="app-card-body">
                            <div class="table-responsive">
                                <table class="table app-table-hover mb-0 text-left text-nowrap">
                        <thead class="sticky-header">
                            <tr>
                                <th class="cell">#</th>
                                <th class="cell">Folio No</th>
                                <th class="cell">Actual Quantity</th>
                                <th class="cell">Certificate No</th>
                                <th class="cell">Distinctive Nos From</th>
                                <th class="cell">Distinctive Nos To</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr ng-repeat="f in stockList" ng-click="editstockJson(f,$index)">
                                <td class="cell">{{ $index + 1 }}</td>
                                <td class="cell">{{ currentStockfolioNo }}</td>
                                <td class="cell">{{ f.actualQty }}</td>
                                <td class="cell">{{ f.certificateNo }}</td>
                                <td class="cell">{{ f.distinctiveNosFrom }}</td>
                                <td class="cell">{{ f.distinctiveNosTo }}</td>
                            </tr>
                        </tbody>
                    </table>
                            </div>
                        </div>
                    </div>
            </div>
        </div>
        </div>
    </div>

    <!-- Add/Edit Stock Modal -->
    <div class="modal fade" id="stockModal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-xl" role="document">
            <div class="modal-content">
                <form ng-submit="saveStock()">
                    <div class="modal-header">
                        <h5 class="modal-title">{{ isEditing ? 'Edit Stock' : 'Add Stock' }}</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-md-4" hidden>
                                <div class="form-group">
                                    <label for="companyName">Company Name</label>
                                    <input type="text" id="companyName" ng-model="currentStock.companyName" class="form-control" placeholder="Company Name"  />
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="companyName">Company Name</label>
                                    <select class="form-select" ng-options="f.id as f.companyName for f in companylist" ng-model="currentStock.companyId" ng-change="setFaceValue(currentStock.companyId)" required>
                                        <option selected disabled value="">Select Company</option>
                                    </select>
                                </div>
                            </div>

                            <div class="col-md-4" hidden>
                                <div class="form-group">
                                    <label for="firstHolder">First Holder</label>
                                    <input type="text" id="firstHolder" ng-model="currentStock.firstHolder" class="form-control" placeholder="First Holder" />
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="firstHolderId">First Holder</label>
                                    <select class="form-select" ng-options="f.id as f.name for f in holderlist" ng-model="currentStock.firstHolderId" ng-change="fistholderselect(currentStock.firstHolderId,currentStock.secondHolderId,currentStock.thirdHolderId)" required>
                                        <option selected disabled value="">Select Holder</option>
                                    </select>
                                </div>
                            </div>

                            <div class="col-md-4" hidden>
                                <div class="form-group">
                                    <label for="secondHolder">Second Holder</label>
                                    <input type="text" id="secondHolder" ng-model="currentStock.secondHolder" class="form-control" placeholder="Second Holder" />
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="secondHolderId">Second Holder</label>
                                    <select class="form-select" ng-options="f.id as f.name for f in holderlist" ng-model="currentStock.secondHolderId" ng-change="secondholderselect(currentStock.firstHolderId,currentStock.secondHolderId,currentStock.thirdHolderId)">
                                        <option selected disabled value="">Select Holder</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            
                            <div class="col-md-4" hidden>
                                <div class="form-group">
                                    <label for="thirdHolder">Third Holder</label>
                                    <input type="text" id="thirdHolder" ng-model="currentStock.thirdHolder" class="form-control" placeholder="Third Holder" />
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="thirdHolderId">Third Holder</label>
                                    <select class="form-select" ng-options="f.id as f.name for f in holderlist" ng-model="currentStock.thirdHolderId" ng-change="thirdholderselect(currentStock.firstHolderId,currentStock.secondHolderId,currentStock.thirdHolderId)">
                                        <option selected disabled value="">Select Holder</option>
                                    </select>
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="folioNo">Folio No</label>
                                    <input type="text" id="folioNo" ng-model="currentStock.folioNo" class="form-control" placeholder="Folio No" />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="claimStatus">Claim Status</label>
                                    <input type="text" id="claimStatus" ng-model="currentStock.claimStatus" class="form-control" placeholder="Claim Status" />
                                </div>
							</div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="actualQty">Actual Quantity</label>
                                    <input type="number" id="actualQty" ng-model="currentStock.actualQty" class="form-control" placeholder="Actual Quantity"  />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="qty">Quantity</label>
                                    <input type="number" id="qty" ng-model="currentStock.qty" class="form-control" placeholder="Quantity" required />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="rate">Rate</label>
                                    <input type="number" step="0.01" id="rate" ng-model="currentStock.rate" class="form-control" placeholder="Rate" required />
                                </div>
                            </div>
                            <div class="col-md-4" hidden>
                                <div class="form-group">
                                    <label for="value">Value</label>
                                    <input type="number" step="0.01" id="value" ng-model="currentStock.value" class="form-control" placeholder="Value" />
                                </div>
                            </div>
                        </div>
                        <div class="row">

                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="process" class="form-label">Face Value</label>
                                    <select class="form-select" ng-options="f.facevalue as f.facevalue for f in facevaluelist" ng-model="currentStock.faceValue" required>
                                        <option selected disabled value="">Select Face Value</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="brokerage">Brokerage</label>
                                    <input type="number" step="0.01" id="brokerage" ng-model="currentStock.brokerage" class="form-control" placeholder="Brokerage" />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="ptbf">
                                        Process to be follow
                                    </label>
                                    <textarea type="text" id="ptbf" ng-model="currentStock.ptbf" class="form-control" placeholder="PTBF"></textarea>
                                </div>
                            </div>
                            </div>
                            <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="remarks">Remarks</label>
                                    <textarea id="remarks" ng-model="currentStock.remarks" class="form-control" placeholder="Remarks"></textarea>
                                </div>
                            </div>
                     </div>
                       
                    </div>
                    <div class="text-center m-2">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" ng-disabled="processdone" class="btn" style="background-color:#51b37f;color:white">{{ isEditing ? 'Save Changes' : 'Add Stock' }}</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Add/Edit Customer Modal -->
    <div class="modal fade" id="rtaModal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-md" role="document">
            <div class="modal-content">
                <form ng-submit="saveRta()">
                    <div class="modal-header">
                        <h5 class="modal-title">{{ isEditing ? 'Edit Rta' : 'Add Rta' }}</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row">

                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="rtaName">Rta Name</label>
                                    <input type="text" id="rtaName" ng-model="currentRta.rtaName" class="form-control" placeholder="Rta Name" required />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="rtaAddress">Rta Address</label>
                                    <input type="text" id="rtaAddress" ng-model="currentRta.rtaAddress" class="form-control" placeholder="Address" />
                                </div>
                            </div>

                        </div>
                    </div>
                    <div class="text-center m-2">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" ng-disabled="processdone" class="btn" style="background-color:#51b37f;color:white">{{ isEditing ? 'Save Changes' : 'Add Rta' }}</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Add/Edit Customer Modal -->
    <div class="modal fade" id="companyModal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-xl" role="document">
            <div class="modal-content">
                <form ng-submit="saveCompany()">
                    <div class="modal-header">
                        <h5 class="modal-title">{{ isEditing ? 'Edit Company' : 'Add Company' }}</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row">


                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="companyName">Company Name</label>
                                    <input type="text" id="companyName" ng-model="currentCompany.companyName" class="form-control" placeholder="Company Name" required />

                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="companyAddress">Company Address</label>
                                    <textarea id="companyAddress" ng-model="currentCompany.companyAddress" class="form-control" placeholder="Company Address"></textarea>

                                </div>
                            </div>
                 
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="companyPinCode">Company PinCode</label>
                                    <input type="text" id="companyPinCode" ng-model="currentCompany.companyPinCode" class="form-control" placeholder="PinCode" required />
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="rtaid">Select RTA</label>
                                    <select id="rtaid" class="form-select" ng-model="currentCompany.rtaid" ng-options="rta.id as rta.rtaName for rta in rtas" required>
                                        <option value="" disabled selected>Select RTA</option>
                                    </select>
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="faceValue" class="form-label">Face Value</label>
                                    <select class="form-select" ng-options="f.facevalue as f.facevalue for f in facevaluelist" ng-model="currentCompany.faceValue" required>
                                        <option selected disabled value="">Select Face Value</option>
                                    </select>
                                </div>
                            </div>

                        </div>
                    </div>
                    <div class="text-center m-2">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" ng-disabled="processdone" class="btn" style="background-color:#51b37f;color:white">{{ isEditing ? 'Save Changes' : 'Add Company' }}</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script>
        angular.module('Stock-CMS', []).controller('StockController', function ($scope, $http) {
            $scope.stocks = [];
            $scope.customers = [];
            $scope.stockList = [];
            $scope.currentStock = {};
            $scope.isEditing = false;
            var isProcessing = false;
            $scope.processdone = false;

            showLoader();

             var path = window.location.pathname;
            var segments = path.split('/');
            var id = segments[segments.length - 1];

         $scope.facevaluelist = [
            { id: 1, facevalue: 1 },
            { id: 2, facevalue: 2 },
            { id: 3, facevalue: 3 },
            { id: 4, facevalue: 4 },
            { id: 5, facevalue: 5 },
            { id: 6, facevalue: 6 },
            { id: 7, facevalue: 7 },
            { id: 8, facevalue: 8 },
            { id: 9, facevalue: 9 },
            { id: 10, facevalue: 10 },
        ];

        
             $scope.search = '';

            $scope.filter = function(filter = null){
                $scope.search = filter != null ? filter : '';
                $scope.loadStocks();
            }

            // Load Stocks
            $scope.loadStocks = function () {
                 if (id)
                 {
                    $http.get('/Enquiry/GetStocks/', {
                params: {
                    id: id,
                    val: $scope.search || '',
                }
            }).then(function (response) {
                    $scope.stocks = response.data;
                    hideLoader();
                }, function (error) {
                    console.error('Error loading stocks:', error);
                    hideLoader();
                });
                 }
              
            };

            $scope.loadholder = function () {
                 if (id)
                 {
                    $http.get('/Doc/GetDocs/'+ id).then(function (response) {
                    $scope.holderlist = response.data;
                    hideLoader();
                }, function (error) {
                    console.error('Error loading stocks:', error);
                    hideLoader();
                });
                 }
            };

            $scope.fistholderselect = function (fid,sid,tid) {
               // var find1 = $scope.holderlist .find(x => x.id === fid);
             
              var result =  (fid == sid ||  fid == tid)
               if(result)
             {  
                $scope.currentStock.firstHolderId = undefined;
                // alert("Not Allowed");
                Swal.fire({
                    title: 'Error!',
                    text: 'Same person can not be selected for multiple Holders.',
                    icon: 'error',
                    confirmButtonText: 'Try Again'
                });

             
               }
            }
            
            $scope.secondholderselect = function (fid,sid,tid) {
                  //var find2 = $scope.holderlist .find(x => x.id === sid);
                  
             var result =  (sid == fid ||  sid == tid)
               if(result)
             
             {
                $scope.currentStock.secondHolderId = undefined;
                Swal.fire({
                    title: 'Error!',
                    text: 'Same person can not be selected for multiple Holders.',
                    icon: 'error',
                    confirmButtonText: 'Try Again'
                });
                // alert("Not Allowed");

             }
              
            }

            $scope.thirdholderselect = function (fid,sid,tid) {
                // var find3 = $scope.holderlist .find(x => x.id === tid);
                 
              var result =  (tid == sid ||  tid == fid)
               if(result)
             {  
                $scope.currentStock.thirdHolderId = undefined;
                // alert("Not Allowed");
                Swal.fire({
                    title: 'Error!',
                    text: 'Same person can not be selected for multiple Holders.',
                    icon: 'error',
                    confirmButtonText: 'Try Again'
                });
               }
            }

            $scope.loadcompany = function () {
                 
                    $http.get('/Company/GetCompany').then(function (response) {
                    $scope.companylist = response.data;
                    hideLoader();
                }, function (error) {
                    console.error('Error loading stocks:', error);
                    hideLoader();
                });
            }

            // Load Customers
            $scope.loadCustomers = function () {
                $http.get('/Master/GetCustomers').then(function (response) {
                    $scope.customers = response.data;
                }, function (error) {
                    console.error('Error loading customers:', error);
                });
            };

            // Get Customer Name by ID
            $scope.getCustomerName = function (customerId) {
                const customer = $scope.customers.find(c => c.id === customerId);
                return customer ? customer.customerName : 'Unknown';
            };

            // Open Modal
            $scope.openStockModal = function (stock = null) {
                $scope.isEditing = !!stock;
                $scope.currentStock = stock ? angular.copy(stock) : {};
                $('#stockModal').modal('show');
            };

             $scope.navtogenerateform = function (id) {
                window.open('/Form/GenerateForm/' + id, '_blank');
            };

$scope.calculateqty = function() {
    var from = parseInt($scope.jsonData.distinctiveNosFrom, 10);
    var to = parseInt($scope.jsonData.distinctiveNosTo, 10);

    if (!isNaN(from) && !isNaN(to) && from <= to) {
        $scope.jsonData.actualQty = (to - from + 1);
    } else {
        $scope.jsonData.actualQty = '';
    }
};

        $scope.addStockData = function(isv) {
            var from = parseInt($scope.jsonData.distinctiveNosFrom, 10);
            var to = parseInt($scope.jsonData.distinctiveNosTo, 10);

            if (!isNaN(from) && !isNaN(to) && from > to) {
                        alert('Please Distinctive No To must be equal or greater than Distinctive No From');
                        $scope.jsonData.actualQty = '';
                        return;
            }
            if (isv) {
                let totalQty = $scope.stockList.reduce((sum, stock) => sum + stock.actualQty, 0);

                if ($scope.isEditing) {
                    const editingStock = $scope.stockList.find(stock => stock.folioNo === $scope.jsonData.folioNo);
                    if (editingStock) {
                        totalQty -= editingStock.actualQty;
                    }
                }

                totalQty += $scope.jsonData.actualQty;

                if (totalQty > $scope.Quantity) {
                    alert('The total quantity cannot exceed the allowed Quantity');
                    return;
                }

                if ($scope.isEditing) {
                    const index = $scope.stockList.findIndex(stock => stock.folioNo === $scope.jsonData.folioNo);
                    if (index !== -1) {
                     $scope.Sum -= $scope.stockList[index].actualQty;

                    $scope.stockList[index] = angular.copy($scope.jsonData);

                    $scope.Sum += $scope.jsonData.actualQty;
                    } else {
                        console.log('Stock not found for editing');
                    }
                } else {
                    $scope.stockList.push(angular.copy($scope.jsonData));
                    $scope.Sum += $scope.jsonData.actualQty;
                }

                $scope.jsonData = {}; 
                $scope.isEditing = false; 
            } else {
                alert('Please fill in the required fields');
            }
        };

                       // Open Modal
        $scope.openFormModal = function (id,folioNo,qty) {
            $scope.currentStockId = id;
            $scope.currentStockfolioNo = folioNo;
            $scope.Quantity = qty;

            var data = $scope.stocks.stocks.find(c => c.id === id).stockJson;
            if(data){
            $scope.stockList = JSON.parse(data);
            }
            else{
                $scope.stockList = [];
            }
             $scope.jsonData = { };
            $('#formModal').modal('show');
        };

        $scope.editstockJson = function (stockdata,i){
             $scope.isEditing = true;
            $scope.jsonData = angular.copy(stockdata);
        }

        $scope.SaveStockJson = function() {
            $scope.processdone = true;
            if (isProcessing) return;
            // if ($scope.stockList.length < 2) {
            //  Swal.fire({
            //             title: 'Error!',
            //             text:  'Please Add Atlest 2 Records',
            //             icon: 'error',
            //             confirmButtonText: 'Try Again'
            //         });
            //     isProcessing = false;
            //     return;
            // };
            isProcessing = true;
           $scope.stockList[0].folioNo = $scope.currentStockfolioNo;
            $scope.stockList.forEach(item => delete item["$$hashKey"]);
            let jsonString = JSON.stringify($scope.stockList, null, 2);

            var stockdata = {
                        id: $scope.currentStockId,
                        jsonString: jsonString
            }


            const url = '/Enquiry/UpdateStockJson';

            $http({
                method: 'POST',
                url: url,
                                data:stockdata,
                headers: {
                    'Content-Type': 'application/json'
                }
            }).then(function(response) {
                if (response.data.success) {
                    Swal.fire({
                        title: 'Success',
                        text: response.data.message || 'Operation successful!',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    });
                    $scope.processdone = false;
                    $scope.loadStocks();
                    $scope.stockList = [];
                    $('#formModal').modal('hide');
                } else {
                    Swal.fire({
                        title: 'Error!',
                        text: response.data.message || 'There was an issue with the operation.',
                        icon: 'error',
                        confirmButtonText: 'Try Again'
                    });
                    $scope.processdone = false;
                }
                isProcessing = false;
            }, function(error) {
                Swal.fire({
                    title: 'Error',
                    text: 'An error occurred.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
                $scope.processdone = false;
                isProcessing = false;
            });
        };

            // Save Stock
            $scope.saveStock = function () {
                if (id) 
                {
                    $scope.processdone = true;
                    if (isProcessing) return;
                    isProcessing = true;
                    $scope.currentStock.customerId = id;
                    $scope.currentStock.customerId = $scope.isEditing ? $scope.currentStock.customerId : id

                    const url = $scope.isEditing ? `/Enquiry/UpdateStock/${$scope.currentStock.id}` : '/Enquiry/CreateStock';
                    $http.post(url, $scope.currentStock).then(function (response) {
                        if (response.data.success) {
                            Swal.fire({
                                title: 'Success',
                                text: response.data.message || 'Operation successful!',
                                icon: 'success',
                                confirmButtonText: 'OK'
                            });
                            $scope.processdone = false;
                            $scope.loadStocks();
                            $('#stockModal').modal('hide');
                        } else {
                            Swal.fire({
                                title: 'Error!',
                                text: response.data.message || 'There was an issue with the operation.',
                                icon: 'error',
                                confirmButtonText: 'Try Again'
                            });
                            $scope.processdone = false;
                        }
                        isProcessing = false;
                    }, function (error) {
                        Swal.fire({
                            title: 'Error',
                            text: 'An error occurred.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                        $scope.processdone = false;
                        isProcessing = false;
                    });
                }
                    
            };

              $scope.openimportModal = function () {

                  $scope.docFile= undefined;

                document.getElementById('docFile').value = '';

                $('#uploadModal').modal('show');

            };



            $scope.uploadDoc = function(){

                if(id){
                    $scope.processdone = true;
                    var formData = new FormData();

                    formData.append('customerId', id);

                     if ($scope.docFile) formData.append('docFile', $scope.docFile);



                     var url ='/Enquiry/UploadDoc';



                    $http.post(url, formData, {

                        headers: { 'Content-Type': undefined }

                    }).then(function (response) {

                        Swal.fire({

                            title: response.data.success ? 'Success' : 'Error',

                            text: response.data.success ? response.data.message : (response.data.message || 'An error occurred'),

                            icon: response.data.success ? 'success' : 'error',

                            confirmButtonText: 'OK'

                        });
                        $scope.processdone = false;
                    isProcessing = false;

                    if(response.data.success)

                    {
                        $scope.processdone = false;
                        $scope.loadStocks();

                        $scope.docFile = '';

                        $('#uploadModal').modal('hide');

                    }

                    });

                }

            }

                     $scope.manageTrackingDoc = function (id) {
            window.open('/Enquiry/Tracking/' + id, '_self');
        };

        //Rta Data
        // Load Customers
            $scope.loadRta = function () {
                $http.get('/Company/GetRta').then(function (response) {
                    $scope.rtas  = response.data;
                    hideLoader();
                }, function (error) {
                    console.error('Error loading rta:', error);
                    hideLoader();
                });
            };

             // Open Modal
            $scope.openRtaModal = function () {
                $('#rtaModal').modal('show');
            };


         // Save Customer
            $scope.saveRta = function () {
                $scope.processdone = true;
                if (isProcessing) return;
                isProcessing = true;
                const url = '/Company/CreateRta';
                $http.post(url, $scope.currentRta).then(function (response) {
                    if (response.data.success) {
                        Swal.fire({
                            title: 'Success',
                            text: response.data.message || 'Operation successful!',
                            icon: 'success',
                            confirmButtonText: 'OK'
                        });
                        $scope.processdone = false;
                        $scope.loadRta();
                        $('#rtaModal').modal('hide');
                    } else {
                        Swal.fire({
                            title: 'Error!',
                            text: response.data.message || 'There was an issue adding the rta.',
                            icon: 'error',
                            confirmButtonText: 'Try Again'
                        });
                        $scope.processdone = false;
                    }
                    isProcessing = false;
                }, function (error) {
                    Swal.fire({
                        title: 'Error',
                        text: 'An error occurred.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                    $scope.processdone = false;
                    isProcessing = false;
                });
            };

             $scope.manageDocs = function () {
                window.open('/Doc/Doc/' + id, '_self');
            };

            //Company Data
            // Open Modal
            $scope.openCompanyModal = function () {
                $('#companyModal').modal('show');
            };

             // Save Company
            $scope.saveCompany = function () {
                $scope.processdone = true;
            if (isProcessing) return;
            isProcessing = true;
            const url = '/Company/CreateCompany';
            $http.post(url, $scope.currentCompany).then(function (response) {
                if (response.data.success) {
                    Swal.fire({
                        title: 'Success',
                        text: response.data.message || 'Operation successful!',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    });
                    $scope.processdone = false;
                    $scope.loadcompany();
                    $('#companyModal').modal('hide');
                } else {
                    Swal.fire({
                        title: 'Error!',
                        text: response.data.message || 'There was an issue adding the company.',
                        icon: 'error',
                        confirmButtonText: 'Try Again'
                    });
                    $scope.processdone = false;
                }
                isProcessing = false;
            }, function (error) {
                Swal.fire({
                    title: 'Error',
                    text: 'An error occurred.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
                $scope.processdone = false;
                isProcessing = false;
            });
        };

        $scope.paymentdone = function(stock) {
            // Swal.fire({
            //         title: 'Are you sure?',
            //         text: "You won't be able to revert this!",
            //         icon: 'warning',
            //         showCancelButton: true,
            //         confirmButtonText: 'Yes, delete it!',
            //         cancelButtonText: 'No, keep it'
            //     }).then((result) => {
            //         if (result.isConfirmed) {
                    if(stock.claimStatus == "Demated"){
                        $http.post('/Enquiry/UpdatePaidStockbyColumn', stock).then(function (response) {
                            Swal.fire({
                                title: 'Success',
                                text: response.data.message || 'Operation successful!',
                                icon: 'success',
                                confirmButtonText: 'OK'
                            });
                            $scope.loadStocks();
                        });
                    }
                    else{
                        Swal.fire({
                        title: 'Error',
                        text: 'Please first Finish the stock Processes.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                    }
                //     }
                // });
        }

                 $scope.deleteStock = function (docId) {
                    Swal.fire({
                        title: 'Are you sure?',
                        text: "You won't be able to revert this!",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Yes, delete it!',
                        cancelButtonText: 'No, keep it'
                    }).then((result) => {
                        if (result.isConfirmed) {
                                    $http.post('/Enquiry/DeleteStockbyColumn', docId).then(function (response) {
                                Swal.fire({
                                    title: response.data.success ? 'Deleted!' : 'Error',
                                    text: response.data.success ? 'The Stock has been deleted.' : 'An error occurred.',
                                    icon: response.data.success ? 'success' : 'error',
                                    confirmButtonText: 'OK'
                                });
                                        $scope.loadStocks();
                            });
                        }
                    });
                };

                $scope.setFaceValue = function (Id) {
                     $scope.currentStock.faceValue = $scope.companylist.find(x => x.id === Id).faceValue;
                }

            // Initial Load
            $scope.loadRta();
            $scope.filter();
            $scope.loadcompany();
            $scope.loadholder();
           // $scope.loadCustomers();
        });
    </script>
</body>
</html>

