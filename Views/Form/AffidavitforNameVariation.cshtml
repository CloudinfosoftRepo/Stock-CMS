<html lang="en" ng-app="Stock-CMS">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <title>Affidavit for Name Variation</title>
        <style type="text/css">
            * {
                margin: 0;
                padding: 0;
                text-indent: 0;
            }

            .p,
            p {
                color: black;
                font-family: Calibri, sans-serif;
                font-style: normal;
                font-weight: normal;
                text-decoration: none;
                font-size: 12pt;
                margin: 0pt;
            }

            .s1 {
                color: black;
                font-family: Calibri, sans-serif;
                font-style: normal;
                font-weight: normal;
                text-decoration: none;
                font-size: 8pt;
                vertical-align: 4pt;
            }

            .s2 {
                color: black;
                font-family: Calibri, sans-serif;
                font-style: normal;
                font-weight: bold;
                text-decoration: none;
                font-size: 12pt;
            }

            .s3 {
                color: black;
                font-family: Calibri, sans-serif;
                font-style: normal;
                font-weight: normal;
                text-decoration: none;
                font-size: 11pt;
            }

            .s5 {
                color: black;
                font-family: "Times New Roman", serif;
                font-style: normal;
                font-weight: normal;
                text-decoration: underline;
                font-size: 12pt;
            }

            .s6 {
                color: black;
                font-family: "Times New Roman", serif;
                font-style: normal;
                font-weight: normal;
                text-decoration: none;
                font-size: 12pt;
            }

            li {
                display: block;
            }

            #l1 {
                padding-left: 0pt;
                counter-reset: c1 1;
            }

                #l1 > li > *:first-child:before {
                    counter-increment: c1;
                    content: counter(c1, decimal) ". ";
                    color: black;
                    font-family: Calibri, sans-serif;
                    font-style: normal;
                    font-weight: normal;
                    text-decoration: none;
                    font-size: 12pt;
                }

                #l1 > li:first-child > *:first-child:before {
                    counter-increment: c1 0;
                }

            .card {
                border-radius: 10px;
                overflow: hidden;
            }

            .form-group {
                margin-bottom: 1.5rem;
            }

            .form-label {
                font-size: 1.1rem;
                font-weight: 600;
            }

            .form-select {
                width: 100%;
                padding: 0.75rem;
                border-radius: 5px;
                border: 1px solid #ddd;
                font-size: 1rem;
            }

            .btn-primary {
                width: 100%;
                padding: 12px 16px;
                text-transform: uppercase;
                font-weight: bold;
                transition: background-color 0.3s ease, transform 0.2s ease;
            }

                .btn-primary:hover {
                    background-color: #0056b3;
                    transform: scale(1.05);
                }

        .mybtn {
            background-color: #51b37f !important;
            color: white !important;
            width: auto !important;
        }

        .myarea {
            justify-content: center !important;
            display: flex !important;
            margin-top: 25px !important;
        }
        </style>
    </head>

<body style="padding: 5%;" ng-controller="FormController">
    <div class="row align-items-center">
        <!-- Arrow Icon aligned to the left -->
        <a class="col-md-1 text-start" style="font-size:35px;" ng-click="navtogenerateform()">
            <i class="bi bi-arrow-left"></i>
        </a>

        <!-- Centered Heading -->
        <div class="col-md-10 text-center">
            <h3>Affidavit for Name Variation</h3>
        </div>
    </div>
    <div ng-if="hDiv" class="container my-5">
        <div class="card shadow-sm">
            <div class="card-body">
                <form name="gForm" ng-submit="genrateForm()">
                    <h4 class="card-title text-center mb-4" style="color:#51b37f;">Generate Form</h4>

                    <div class="row">
                        <!-- Select Customer Dropdown -->
                        <div class="col-md-4 mb-3">
                            <div class="form-group">
                                <label for="seletedId" class="form-label">Select Customer</label>
                                <select class="form-select" id="seletedId" ng-options="f.id as f.name for f in doc" ng-model="seletedId" ng-change="loadCustomers(seletedId, heirId)">
                                    <option selected disabled value="">Select customer</option>
                                </select>
                            </div>
                        </div>

                        <!-- Select Heir Dropdown -->
                        <div class="col-md-4 mb-3" ng-show="legalheirlist">
                            <div class="form-group">
                                <label for="heirId" class="form-label">Select Heir</label>
                                <select class="form-select" id="heirId" ng-options="g.id as g.name for g in heir" ng-model="heirId" ng-change="loadCustomers(seletedId, heirId)">
                                    <option selected disabled value="">Select Heir</option>
                                </select>
                            </div>
                        </div>

                        <!-- Place of Submission Input Field -->
                        <div class="col-md-4 mb-3">
                            <div class="form-group">
                                <label for="place" class="form-label">Place</label>
                                <input type="text" ng-model="data.place" class="form-control" placeholder="Place of Form Submission">
                            </div>
                        </div>
                        </div>
                    <div class="row">
                        <!-- Full Name Input Field -->
                        <div class="col-md-4 mb-3">
                            <div class="form-group">
                                <label for="fullname" class="form-label">Full Name</label>
                                <input type="text" ng-model="data.fullname" class="form-control" placeholder="Full Name">
                            </div>
                        </div>
                    </div>
                        <!-- Submit Button -->
                        <div class="col-md-4 d-flex align-items-center justify-content-center mb-3">
                        <button type="submit" ng-disabled="processdone" class="btn btn-primary px-4" style="background-color:#51b37f; color:white; border-radius: 5px;">
                                Generate Form
                            </button>
                        </div>
                    
                </form>
            </div>
        </div>
    </div>
    <div id="printForm">
    <p style="
        padding-top: 1pt;
        /* padding-left: 78pt; */
        text-indent: 0pt;
        text-align: center;
      ">
        To be executed on non-Judicial Stamp Paper and attested from 1<span class="s1">st</span>
        Class Magistrate / Notary Public.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p class="s2" style="text-indent: 0pt; text-align: center">AFFIDAVIT</p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p style="
        padding-left: 5pt;
        text-indent: 0pt;
        line-height: 108%;
        text-align: justify;
      ">
            <span class="s3">I, </span><u><b>{{data.customerName}}, </b></u>{{data.relationship}}
        <u><b>{{data.sonof}},</b></u><b> </b>aged {{data.age}} years, residing at
        <u>
            @* 1/A, NANDANVAN SOCIETY PART-1, NEAR AKOTA STADIUM, VADODRA, GUJARAT, *@
            {{data.address}}
            </u>
        @* <u>390020,</u> *@
    </p>
    <p style="
        padding-top: 7pt;
        padding-left: 5pt;
        text-indent: 0pt;
        text-align: justify;
      ">
        do hereby solemnly affirm and declare as follows:
    </p>
    <ol id="l1">
        <li data-list-text="1.">
            <p style="
            padding-top: 9pt;
            padding-left: 41pt;
            text-indent: -18pt;
            text-align: left;
          ">
                I am the deponent herein and a law-abiding citizen of India.
            </p>
        </li>
        <li data-list-text="2.">
            <p style="
            padding-top: 1pt;
            padding-left: 41pt;
            text-indent: -18pt;
            text-align: left;
          ">
                    The correct name of <u><b>{{data.customerName}}</b></u><b> </b>is <u><b>{{data.fullname}}</b></u>
            </p>
        </li>
        <li data-list-text="3.">
            <p class="s2"
               style="
            padding-top: 1pt;
            padding-left: 41pt;
            text-indent: -18pt;
            line-height: 108%;
            text-align: left;
          ">
                    <span class="p">I confirm and declare that </span><u>‘{{data.customerName}}’</u> <span class="p">and </span><u>‘{{data.fullname}}’</u> @* <u>SHAH’,</u> *@
                <span class="p">is name of one and same person.</span>
            </p>
        </li>
        <li data-list-text="4.">
            <p style="
            padding-left: 41pt;
            text-indent: -18pt;
            line-height: 15pt;
            text-align: left;
          ">
                That I shall be responsible if any statement made by me is found false
                later.
            </p>
        </li>
        <li data-list-text="5.">
            <p style="
            padding-top: 1pt;
            padding-left: 41pt;
            text-indent: -18pt;
            text-align: left;
          ">
                That the above statement is true and correct.
            </p>
        </li>
    </ol>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p style="
        padding-left: 324pt;
        text-indent: 0pt;
        line-height: 1pt;
        text-align: left;
      " />
    <p style="padding-top: 9pt; text-indent: 0pt; text-align: right">
        Deponent
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p style="padding-left: 5pt; text-indent: 0pt; text-align: left">
        Verification: -
    </p>
    <p style="
        padding-top: 9pt;
        padding-left: 5pt;
        text-indent: 0pt;
        line-height: 108%;
        text-align: left;
      ">
        Verified that the above said statements made in the above paragraphs of
        this affidavit are true to the best of my knowledge and belief and nothing
        has been concealed therein.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p style="padding-left: 5pt; text-indent: 0pt; text-align: left">
        I sign this affidavit on this
        <span class="s5">
             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @*  {{data.day}} *@
            </span><span class="s6"> </span>day of
        <span class="s5">
                @* &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  {{data.month}} *@ <u> &emsp;&emsp;&emsp;</u>
            </span>, <span class="s5">
                @* &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  {{data.year}}*@20<u> &emsp;&emsp;</u>
                </span><span class="s6"> </span>at
    </p>
    <p style="
        padding-top: 1pt;
        padding-left: 5pt;
        text-indent: 0pt;
        text-align: left;
      ">
        <span class="s5">
            @* &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *@
            {{data.place}}
        </span>.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p style="
        padding-left: 324pt;
        text-indent: 0pt;
        line-height: 1pt;
        text-align: left;
      " />
    <p style="padding-top: 9pt; text-indent: 0pt; text-align: right">
        Deponent
    </p>
    </div>
    <div class="myarea">
        <button class="btn btn-store mybtn" ng-click="printDiv('printForm')">PRINT</button>
    </div>
</body>
<script>
    angular.module('Stock-CMS', []).controller('FormController', function ($scope, $http,$timeout) {
        $scope.customers = [];
        $scope.data = undefined;
            $scope.hDiv = true;
            var params = new URLSearchParams(window.location.search);
            var id = params.get('id');
            var id2 = params.get('id2');
        var isProcessing = false;
        $scope.processdone = false;

        // showLoader();

          // Load Customers

        $scope.loadCustomers = function (sid,hid) {

             if(id){
                 hideLoader();
                 var currentDate = new Date();
             var monthsOfYear = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
                 $scope.hDiv = true;
            $http.get('/Enquiry/GetStocksById/'+id).then(function (response) {
                var result = response.data;
                 $http.get('/Form/GetHolderByStockId/' + id).then(function (response) {
                    $scope.doc = response.data;
                    var docs = $scope.doc.find(x => x.id === sid);

                   var isDeceased = !!docs?.dateOfDeath;

                if (isDeceased) {
                    $scope.heirId = null;
    $scope.legalheirlist = isDeceased;
    document.getElementById('heirId').value = '';
                    $http.get('/LegalHeir/GetClaimentLegalHeir/' + docs.id).then(function (response) {
                        $scope.heir = response.data;
                        var heirs = response.data.find(x => x.id === hid); // `hid` needs to be in scope
                        var holder = heirs;

                        populateData(holder, result, currentDate, monthsOfYear,isDeceased);
                    }, function (error) {
                        console.error('Error loading legal heir data:', error);
                        hideLoader();
                    });
                } else {
                    $scope.heirId = null;
    $scope.data = null;
    $scope.legalheirlist = isDeceased;
    document.getElementById('heirId').value = '';
                    var holder = docs;
                    populateData(holder, result, currentDate, monthsOfYear,isDeceased);
                }
                   
                hideLoader();
                }, function (error) {
                    console.error('Error loading Docs:', error);
                    hideLoader();
                });
            }, function (error) {
                console.error('Error loading customers:', error);
                hideLoader();
            });
            }

            if(id2){
                 $scope.hDiv = false;
            $http.get('/Form/GetGenratedFormById/'+id2).then(function (response) {
                var result = response.data;
                var obj = JSON.parse(result.jsonString);
                $scope.data = {
                    docid: obj.docid,
                    customerName: obj.customerName,
                    age:obj.age,
                    relationship: obj.relationship,
                    sonof:obj.sonof,
                    fullname:obj.fullname,
                    address:obj.address,
                    place: obj.place,
                    day:obj.day,
                    month:obj.month,
                    year: obj.year,
                    condition: obj.condition,
                };
                      id = result.stockId;
                checkData();
                hideLoader();
            }, function (error) {
                console.error('Error loading customers:', error);
                hideLoader();
            });
            }

            function populateData(holder, result, currentDate, monthsOfYear,isDeceased) {
                var Age = $scope.calculateAge(holder.dob,holder.dateOfDeath);

                $scope.data = {
                    docid: holder.id,
                   customerName : holder.name,
                   age : Age,
                   relationship: holder.relationship,
                   sonof: holder.relativesName,
                   fullname : '',
                   address : holder.addressAsPerAadhar,
                   place: 'Vadodara',
                   day: currentDate.getDate(),
                   month: monthsOfYear[currentDate.getMonth()],
                   year: currentDate.getFullYear(),
                   condition: isDeceased
                };
            }
        };

                        function checkData() {
        if ($scope.data !== undefined) {
            // Delay the printDiv execution until the next digest cycle
            $timeout(function() {
                $scope.printDiv('printForm');
            }, 0);  // 0 delay to ensure it runs after the view update
        } else {
            setTimeout(checkData, 1000); // Retry after 1000ms if data is not yet available
        }
    }
    $scope.calculateAge = function(dob, deathDate) {
        if (!dob) {
            return '';
        }

        var birthDate = new Date(dob);
        var currentDate = new Date();
        var age = currentDate.getFullYear() - birthDate.getFullYear();
        var m = currentDate.getMonth() - birthDate.getMonth();

        if (m < 0 || (m === 0 && currentDate.getDate() < birthDate.getDate())) {
            age--;
        }

        // If deathDate is provided, calculate age at the time of death
        if (deathDate) {
            var deathDateObj = new Date(deathDate);
            age = deathDateObj.getFullYear() - birthDate.getFullYear();
            var mDeath = deathDateObj.getMonth() - birthDate.getMonth();

            if (mDeath < 0 || (mDeath === 0 && deathDateObj.getDate() < birthDate.getDate())) {
                age--;
            }
            return age;
            // return age + ' (deceased)';
        }

        return age;
    };

        $scope.navtogenerateform = function () {
        window.open('/Form/GenerateForm/'+id, '_self');
    };

        //Genrate Form
         $scope.genrateForm = function () {
             if(id){
                 $scope.processdone = true;
             let jsonString = JSON.stringify($scope.data, null, 2);
             var data ={
                 formName : 'Affidavit for Name Variation',
                 StockId : id,
                 url : `/Form/AffidavitforNameVariation?id2=`,
                 jsonString : jsonString,
                 ClientName: $scope.data.customerName,
                  ClientId: $scope.data.docid,
                 IsActive : true
             }

             const url = '/Form/GenrateForm';
                $http.post(url, data).then(function (response) {
                    if (response.data.success) {
                        Swal.fire({
                            title: 'Success',
                            text: response.data.message || 'Operation successful!',
                            icon: 'success',
                            confirmButtonText: 'OK'
                        });
                        $scope.processdone = false;
                        // $scope.loadCustomers();
                                                window.open(response.data.data.url + response.data.data.id,'_self')

                    } else {
                       Swal.fire({
                         title: 'This Form is already Exits',
                         text: "do you want to go to that form?",
                         icon: 'warning',
                         showCancelButton: true,
                         confirmButtonText: 'Yes',
                         cancelButtonText: 'No'
                     }).then((result) => {
                         if (result.isConfirmed) {
                             window.open(response.data.message, '_self');
                         }
                 });
                 $scope.processdone = false;
                    }
                    isProcessing = false;
                }, function (error) {
                    Swal.fire({
                        title: 'Error',
                        text: 'An error occurred.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                    $scope.processdone = false;
                    isProcessing = false;
                });
            //console.log(dataString);
            }
         }

        // Load Customers
        // $scope.loadCustomers = function () {
        //     $http.get('/Master/GetCustomers').then(function (response) {
        //         $scope.customers = response.data[0];
        //         hideLoader();
        //     }, function (error) {
        //         console.error('Error loading customers:', error);
        //         hideLoader();
        //     });
        // };

        // $scope.loadDocs = function () {
        //     if (true) {
        //         $http.get('/doc/getDocs/' + 1).then(function (response) {
        //             $scope.docs = response.data;
        //             hideLoader();
        //         }, function (error) {
        //             console.error('Error loading Docs:', error);
        //             hideLoader();
        //         });
        //     }
        // };

        //Function
        $scope.printDiv = function (divId) {
            var css='<style type="text/css">* {margin: 0; padding: 0; text-indent: 0;} .p, p {color: black; font-family: Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; margin: 0pt;} .s1 {color: black; font-family: Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; vertical-align: 4pt;} .s2 {color: black; font-family: Calibri, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 12pt;} .s3 {color: black; font-family: Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt;} .s5 {color: black; font-family: "Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: underline; font-size: 12pt;} .s6 {color: black; font-family: "Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt;} li {display: block;} #l1 {padding-left: 0pt; counter-reset: c1 1;} #l1 > li > *:first-child:before {counter-increment: c1; content: counter(c1, decimal) ". "; color: black; font-family: Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt;} #l1 > li:first-child > *:first-child:before {counter-increment: c1 0;} @@media print {.hide-print {display: none !important;}} </style>';
            var innerContents = document.getElementById(divId).innerHTML;
            var popupWinindow = window.open('', '_blank', 'width=600,height=700,scrollbars=no,menubar=no,toolbar=no,location=no,status=no,titlebar=no');
            popupWinindow.document.open();
             popupWinindow.document.write('<html><head><link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">' + css + '</ head > <body style="padding-left: 0 5% 0 5%;"onload="window.print()">' + innerContents + '</html>');
            popupWinindow.document.close();
        };
        //Initialize
        $scope.loadCustomers();
        // $scope.loadDocs();
    });
</script>
</html>
